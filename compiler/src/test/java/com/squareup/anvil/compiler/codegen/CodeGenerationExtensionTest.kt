package com.squareup.anvil.compiler.codegen

import com.google.common.truth.Truth.assertThat
import com.squareup.anvil.compiler.compile
import com.squareup.anvil.compiler.isError
import org.junit.Test

class CodeGenerationExtensionTest {

  @Test fun `generated files with the same path are an error`() {
    // In this test we redeclare the same class, which will trigger our internal check. Normally,
    // kotlinc would catch this "Redeclaration", but our compiler plugin runs first and we can
    // trigger the error that we're looking for.
    compile(
      """
      package com.squareup.test

      import com.squareup.anvil.annotations.ContributesTo

      @ContributesTo(Any::class)
      interface ComponentInterface
      
      @ContributesTo(Any::class)
      interface ComponentInterface
      """
    ) {
      assertThat(exitCode).isError()

      // Replacing the character is necessary for running the tests on Windows.
      assertThat(messages.replace('\\', '/')).contains(
        "There were duplicate generated files. Generating and overwriting the same file leads " +
          "to unexpected results. The relative path is: " +
          "anvil/hint/merge/com/squareup/test/ComponentInterface.kt. The file was generated by " +
          "class com.squareup.anvil.compiler.codegen.ContributesToGenerator. The input files " +
          "were [com.squareup.test.Source0.kt]."
      )
    }
  }
}
