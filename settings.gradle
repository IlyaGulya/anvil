pluginManagement {
  repositories {
    google()
    gradlePluginPortal()
    mavenCentral()
  }

  includeBuild('build-logic/conventions')
  includeBuild('build-logic/settings')
}

plugins {
  id 'com.squareup.anvil.gradle-settings'
}

rootProject.name = 'anvil'

include ':annotations'
include ':annotations-optional'
include ':compiler'
include ':compiler-api'
include ':compiler-utils'
include ':integration-tests:code-generator'
include ':integration-tests:code-generator-tests'
include ':integration-tests:dagger-factories-only'
include ':integration-tests:library'
include ':integration-tests:mpp:android-module'
include ':integration-tests:mpp:jvm-module'
include ':integration-tests:tests'
include ':sample:app'
include ':sample:library'
include ':sample:scopes'

include ':gradle-plugin'

includeBuild('build-logic/delegate') {
  dependencySubstitution {
    [
      'annotations',
      'annotations-optional',
      'compiler',
      'compiler-api',
      'compiler-utils',
      'gradle-plugin'
    ].each { name ->
      substitute module("com.squareup.anvil:$name") using project(":$name")
    }
  }
}

// Include the benchmark modules if they exist.
def benchmarkSettingsFile = file('benchmark/settings.gradle')
if (benchmarkSettingsFile.exists()) {
  apply from: benchmarkSettingsFile
}
